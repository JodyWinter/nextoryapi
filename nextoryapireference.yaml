openapi: 3.0.2
servers:
  - description: Prod
    url: 'https://www.nextory.se/api/app/<module_name>/<API_version>'
  - description: Dev
    url: 'http://apptest.nextory.se:82/api/app/<module_name>/<API_version>'
info:
  description: |-
    The Nextory API is the only means of communication between the Nextory app and the backend that supports it.
    It is an internal API that is used by Nextory's app teams. This document defines all of the functionality of the Nextory API.
  version: '7.1'
  title: Nextory API
  contact:
    name: Redacted
    email: redacted@nextory.com
    url: www.nextory.se
  license:
    name: Licensed to Nextory
    url: 'https://www.nextory.se'
  termsOfService: www.nextory.se
security:
  - app_id: []
paths:
  /autocomplete:
    get:
      summary: Search autocomplete
      operationId: NX-015
      description: |-
        **Description:** Gets a list of auto-complete results for a search string. This endpoint is similar to NX-043 but not the same. It is older, and is used by the web.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [https://www.nextory.se/api/5.6/autocomplete?appId=201&version=1.1&model=Simulator64&keyword=john](https://www.nextory.se/api/5.6/autocomplete?appId=201&version=1.1&model=Simulator64&keyword=john)

        **Other Information:** A keyword is expected to be a part of each string in the terms array, so the app can highlight the keyword in bold. The app will display the search terms in the order they appear in the array.
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: john
          in: query
          name: keyword
          description: 'A keyword is expected to be a part of each string in the terms array, so the app can highlight the keyword in bold. The app will display the search terms in the order they appear in the array.'
          required: true
        - schema:
            type: string
            example: 'sv, en'
          in: query
          name: languages
          description: 'Takes single or multiple language codes as values, separated by a comma. If this is not passed, the backend filters book groups based on languages allowed for the user market. Any other language values specified will be ignored. If the format of the values is invalid, error code 1000 will be returned. API v7.1 and higher.'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      terms:
                        type: array
                        items:
                          required:
                            - terms
                          properties: {}
                    required:
                      - terms
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      terms:
                        - term 1
                        - term 2
                        - term 3
                        - term 4
                        - term 5
                        - term 6
                        - term 7
                        - term 8
                        - term 9
                        - term 10
  /autocompleteresults:
    get:
      summary: Autocomplete results
      operationId: NX-043
      description: |-
        **Description:** Gets a list of autocomplete results for a provided search string. This endpoint is similar to NX-015 but not the same. It is newer, and is used by the app.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [https://www.nextory.se/api/app/catalogue/7.3/autocompleteresults?appId=201&version=1.1&model=Simulator64&query=john&language=sv,fi](https://www.nextory.se/api/app/catalogue/7.3/autocompleteresults?appId=201&version=1.1&model=Simulator64&query=john&language=sv,fi)
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/token'
        - schema:
            type: string
            example: Har
          in: query
          name: query
          description: Search term. All API versions.
          required: true
        - schema:
            type: string
            example: 'sv,fi'
          in: query
          name: language
          description: 'Takes single or multiple language codes as values, separated by a comma. If this is not passed, the backend filters bookgroups based on languages allowed for the user market. Any other language values specified will be ignored. If the format of the values is invalid, error code 1000 will be returned. API v7.1 and higher.'
          required: true
        - schema:
            type: string
            example: '1'
          in: query
          name: formattype
          description: 'The type of book. Values are “0”, “1” and “2”. "1" only e-books are returned. "2" only audio books are returned. If missing or "0" then both e-books and audio books are returned. API v7.1 and higher.'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      autocomplete:
                        type: array
                        uniqueItems: true
                        items:
                          required:
                            - text
                            - position
                          properties:
                            text:
                              type: string
                            position:
                              type: number
                      didyoumean:
                        type: array
                        items:
                          properties: {}
                      autocompletemag:
                        type: array
                        uniqueItems: true
                        items:
                          required:
                            - text
                            - position
                          properties:
                            text:
                              type: string
                            position:
                              type: number
                      didyoumeanmag:
                        type: array
                        items:
                          properties: {}
                    required:
                      - autocomplete
                      - didyoumean
                      - autocompletemag
                      - didyoumeanmag
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      autocomplete:
                        - text: historia
                          position: 0
                        - text: 'historia, política y guerra'
                          position: 1
                        - text: historia general
                          position: 2
                        - text: historias de amor de 9 a 12 años
                          position: 3
                        - text: historias de amor de 6 a 9 años
                          position: 4
                        - text: historia de mi vida
                          position: 5
                        - text: historia de la filosofía
                          position: 6
                        - text: historia universal freak 2
                          position: 7
                        - text: historias por la paz
                          position: 8
                        - text: historias de nueva york
                          position: 9
                        - text: historias de londres
                          position: 10
                        - text: historias de amor
                          position: 11
                        - text: historia militar
                          position: 12
                        - text: historia general de las indias
                          position: 13
                        - text: historia fácil para la eso
                          position: 14
                        - text: historia freak del fútbol
                          position: 15
                        - text: historia de tobías
                          position: 16
                        - text: historia de sor maría de la visitación
                          position: 17
                        - text: historia de la vida del buscón
                          position: 18
                        - text: 'historia de la propiedad: la expropiación. vii encuentro interdisciplinar, salamanca, 15-17 de septiembre de'
                          position: 19
                      didyoumean: []
                      autocompletemag:
                        - text: historia
                          position: 0
                        - text: historia y vida
                          position: 1
                        - text: historia national geographic
                          position: 2
                      didyoumeanmag: []
  /facets:
    get:
      summary: Search facets
      operationId: NX-0141
      description: |-
        **Description:** Gets facets for a list of books that the account holder can use to narrow down the list.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL (for Search Facets):** [http://104.155.208.232:82/api/app/catalogue/6.4/facets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&query=stieg&pagenumber=0&pagesize=12&sort=default&type=0&includenotallowedbooks=0](http://104.155.208.232:82/api/app/catalogue/6.4/facets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&query=stieg&pagenumber=0&pagesize=12&sort=default&type=0&includenotallowedbooks=0)

        **Example Request URL (for Level 3 Bookgroups Facets):** [http://104.155.208.232:82/api/app/catalogue/6.7/facets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&bookgroupid=ttc_413](http://104.155.208.232:82/api/app/catalogue/6.7/facets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&bookgroupid=ttc_413)
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: drama
          in: query
          name: query
          description: Search term. All API versions. Required API v6.5 and higher (optional v6.7 and higher).
          required: true
        - schema:
            type: string
            example: tttl_Nyheter ttc_413 sc_1010
          in: query
          name: bookgroupid
          description: 'Level 3 bookgroupid required for facets/filters. If both “query” and “bookgroupid” are passed, “query” takes precedence and “bookgroupid” is ignored.'
          required: true
        - schema:
            type: boolean
            example: true
          in: query
          name: includenotallowedbooks
          description: 'A boolean value (“1” or “0”) that indicates if books returned by the server are not allowed under the account holder’s subscription. "1" (true) = books are not allowed, “0” (false) = books are allowed. Pagination starts from 0. API v6.2 and higher.'
          required: false
        - schema:
            type: string
            example: Stieg Trenter (URL escaped)
          in: query
          name: 'authors_facet '
          description: 'Facet-related GET parameter to match NX-014. Parameters are authors_facet, formattype_facet, language_facet, categoryids_facet, seriesAsit_facet. The app should not keep this hardcoded, however it should hard-code the list of supported facets. Multiple values are comma-separated. API v6.5 and higher. '
          required: false
        - schema:
            type: string
            example: 'sv,en'
          in: query
          name: languages
          description: 'Takes single or multiple language codes as values, separated by a comma. If this is not passed, the backend filters bookgroups based on languages allowed for the user market. Any other language values specified will be ignored. If the format of the values is invalid, error code 1000 will be returned. API v7.1 and higher.'
          required: false
        - schema:
            type: string
            example: '1'
            enum:
              - '0'
              - '1'
              - '2'
          in: query
          name: type
          description: 'The type of book. Values are “0”, “1” and “2”. "1" = only e-books are returned. "2" = only audio books are returned. If missing or "0" then both e-books and audio books are returned. All API versions.'
          required: false
        - schema:
            type: boolean
            example: true
          in: query
          name: tags
          description: 'A boolean value (“1” or “0”) that indicates if the query is on tags. “1” (true) = is on tags, “0” (false) = is not on tags. API v7.1 and higher. Deprecated.'
          required: false
          deprecated: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - books
                      - bookcount
                      - notallowedbookcount
                      - facets
                    properties:
                      books:
                        type: array
                        items:
                          type: object
                      bookcount:
                        type: number
                        example: 0
                        description: The total number of books in the bookgroup. Required in case of the /searchbooks (NX-013) endpoint response. All API versions.
                      notallowedbookcount:
                        type: number
                        example: 0
                        description: The total number of books that are not allowed for the account holder's subscription. Required in case of /searchbooks (NX-013) endpoint response. API v6.2 and higher.
                      facets:
                        type: array
                        uniqueItems: true
                        items:
                          type: object
                          properties:
                            attribute:
                              type: string
                              example: authors
                              description: 'What aspect is being filtered on in this section. In this example, the items listed will be the names of authors.'
                            isRange:
                              type: boolean
                              example: false
                              description: 'A boolean value ("1" or "0") that indicates if the attribute is a numerical range. For example, book length. “1” (true) = is a numerical range, “0” (false) = is not a numerical range. The API does not use ranged values, only multiple-choice values. But the backend system supports filtering by numerical values in a range.'
                            values:
                              type: array
                              description: 'What alternatives can be elected for this attribute. In this example, each value is an author name.'
                              uniqueItems: true
                              items:
                                type: object
                                properties:
                                  text:
                                    type: string
                                    example: Stieg Trenter
                                    description: What is shown to the end user to explain this option.
                                  count:
                                    type: number
                                    example: 37
                                    description: How many books will be shown to the end user if they select this option.
                                  selected:
                                    type: boolean
                                    example: false
                                    description: 'A boolean value ("1" or "0") that indicates if the user has already selected this option. “1” (true) = has selected, “0” (false) = has not selected. The user can make multiple selections, and for each selection this API call gets refreshed.'
                                required:
                                  - text
                                  - count
                                  - selected
                            primaryfacet:
                              type: boolean
                              example: true
                              description: Primary facets are cecets that are shown in expanded form on the initial facet view. The rest are shown in condensed form and need to be manually expanded.
                          required:
                            - attribute
                            - isRange
                            - primaryfacet
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      books: []
                      bookcount: 0
                      notallowedbookcount: 0
                      facets:
                        - attribute: authors
                          isRange: false
                          values:
                            - text: Stieg Trenter
                              count: 37
                              selected: false
                            - text: Stieg Larsson
                              count: 7
                              selected: false
                            - text: Eva Gabrielsson
                              count: 2
                              selected: false
                            - text: Kurdo Baksi
                              count: 1
                              selected: false
                            - text: Anna Jansson
                              count: 1
                              selected: false
                            - text: Carin Gerhardsen
                              count: 1
                              selected: false
                            - text: Cilla Börjlind
                              count: 1
                              selected: false
                            - text: Dag Öhrlund
                              count: 1
                              selected: false
                            - text: Henning Mankell
                              count: 1
                              selected: false
                            - text: Håkan Nesser
                              count: 1
                              selected: false
                            - text: Inger Frimansson
                              count: 1
                              selected: false
                            - text: Jan-Erik Pettersson
                              count: 1
                              selected: false
                            - text: Johan Theorin
                              count: 1
                              selected: false
                            - text: Katarina Wennstam
                              count: 1
                              selected: false
                            - text: Magnus Montelius
                              count: 1
                              selected: false
                            - text: Maj Sjöwall
                              count: 1
                              selected: false
                            - text: Malin Persson Giolito
                              count: 1
                              selected: false
                            - text: Marie-Françoise Colombani
                              count: 1
                              selected: false
                            - text: Per Wahlöö
                              count: 1
                              selected: false
                            - text: Rolf Börjlind
                              count: 1
                              selected: false
                            - text: Sara Stridsberg
                              count: 1
                              selected: false
                            - text: Tove Alsterdal
                              count: 1
                              selected: false
                            - text: Ulla Trenter
                              count: 1
                              selected: false
                            - text: Veronica von Schenck
                              count: 1
                              selected: false
                            - text: Åke Edwardson
                              count: 1
                              selected: false
                            - text: Åsa Larsson
                              count: 1
                              selected: false
                          primaryfacet: true
                        - attribute: seriesAsit
                          isRange: false
                          values:
                            - text: Harry Friberg
                              count: 24
                              selected: false
                            - text: Millennium
                              count: 6
                              selected: false
                          primaryfacet: false
                        - attribute: subscriptionorder
                          isRange: false
                          values:
                            - text: '1'
                              count: 48
                              selected: false
                            - text: '2'
                              count: 1
                              selected: false
                          primaryfacet: false
                        - attribute: language
                          isRange: false
                          values:
                            - text: sv
                              count: 45
                              selected: false
                            - text: fi
                              count: 3
                              selected: false
                          primaryfacet: false
                        - attribute: avgrate
                          isRange: true
                          range:
                            min: '3.0'
                            max: '4.75'
                            minSelected: '3.0'
                            maxSelected: '4.75'
                          primaryfacet: true
                        - attribute: categoryids
                          isRange: false
                          values:
                            - text: '1'
                              count: 42
                              selected: false
                              displayname: Deckare
                            - text: '240'
                              count: 5
                              selected: false
                              displayname: Fakta
                            - text: '108'
                              count: 4
                              selected: false
                              displayname: Biografier & memoarer
                            - text: '310'
                              count: 1
                              selected: false
                              displayname: Livsstil
                          primaryfacet: false
                        - attribute: formattype
                          isRange: false
                          values:
                            - text: '1'
                              count: 48
                              selected: false
                            - text: '2'
                              count: 16
                              selected: false
                          primaryfacet: false
  /readdiary/profilereadtimemeta:
    get:
      summary: Reading diary - read-time metadata
      operationId: NX-0251
      description: |-
        **Description:** Gets reading-diary summary data.

        **Parameters:** Mandatory header parameters plus one query parameter.

        **Example Request URL:** [http://104.155.208.232:82/api/6.5/readdiary/profilereadtimemeta?year=2019](http://104.155.208.232:82/api/6.5/readdiary/profilereadtimemeta?year=2019)
      tags:
        - Reading diary
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: '2019'
          in: query
          name: year
          description: The year you are searching for data on. The app gets the current year from device settings. API v6.5 and higher.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - kpi
                    properties:
                      kpi:
                        type: array
                        description: 'Reading diary key performance indicators. Values are ”reading_hours”, ”reading_days” and ”average_minutes_per_day”. ”reading_hours” = the total hours spent reading in the current year, ”reading_days” the total days spent reading in the current year, ”average_minutes_per_day” the average minutes per day spent reading in the current year.'
                        uniqueItems: true
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            value:
                              type: number
                          required:
                            - key
                            - value
                required:
                  - data
              examples:
                Example (Account Holder):
                  value:
                    data:
                      kpi:
                        - key: reading_hours
                          value: 0
                        - key: reading_days
                          value: 0
                        - key: average_minutes_per_day
                          value: 0
                Example (Visitor):
                  value:
                    data:
                      kpi: []
  /readdiary/profilereadtimelist:
    get:
      summary: Reading diary - read-time list
      operationId: NX-0252
      description: |-
        **Description:** Gets a detailed list of historical read times for this account holder’s reading diary.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [http://104.155.208.232:82/api/6.5/readdiary/profilereadtimelist?year=2019&month=1](http://104.155.208.232:82/api/6.5/readdiary/profilereadtimelist?year=2019&month=1)
      tags:
        - Reading diary
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: '2019'
          in: query
          name: year
          description: The year you are searching for data on. The app gets the current year from device settings. API v6.5 and higher.
          required: true
        - schema:
            type: string
            example: '1'
          in: query
          name: month
          description: The month you are searching for data. The app gets the current year from device settings. API v6.5 and higher.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - reading_time
                    properties:
                      reading_time:
                        type: object
                        description: ''
                        required:
                          - month
                          - year
                          - total_reading_seconds_this_month
                          - total_reading_seconds_last_month
                          - daywise_readtime_in_seconds_this_month
                          - daywise_readtime_in_seconds_last_month
                        properties:
                          month:
                            type: number
                            example: 1
                            description: The month specified in the query.
                          year:
                            type: number
                            example: 2019
                            description: The year specified in the query.
                          total_reading_seconds_this_month:
                            type: number
                            example: 0
                            description: The amount of reading time (in seconds) in the specified month.
                          total_reading_seconds_last_month:
                            type: number
                            example: 0
                            description: The amount of reading time (in seconds) in the month previous to the specified month.
                          daywise_readtime_in_seconds_this_month:
                            type: array
                            uniqueItems: true
                            description: How much time spent reading each day of the current month.
                            items:
                              type: object
                              properties:
                                upddate:
                                  type: number
                                  example: 0.03226
                                  description: 'The normalized day of the month, meaning from 0 – 1 rather than from 1 – 31.'
                                usagetime:
                                  type: number
                                  example: 0
                                  description: The number of seconds read on the specified day of the month.
                              required:
                                - upddate
                                - usagetime
                          daywise_readtime_in_seconds_last_month:
                            type: array
                            uniqueItems: true
                            description: How much time spent reading each day of the month previous to the current month.
                            items:
                              type: object
                              properties:
                                upddate:
                                  type: number
                                  example: 0.03226
                                  description: 'The normalized day of the month, meaning from 0 – 1 rather than from 1 – 31.'
                                usagetime:
                                  type: number
                                  example: 0
                                  description: The number of seconds read on the specified day of the month.
                              required:
                                - upddate
                                - usagetime
                required:
                  - data
              examples:
                Example (Account Holder):
                  value:
                    data:
                      reading_time:
                        month: 1
                        year: 2019
                        total_reading_seconds_this_month: 0
                        total_reading_seconds_last_month: 0
                        daywise_readtime_in_seconds_this_month:
                          - upddate: 0.03226
                            usagetime: 0
                          - upddate: 0.06452
                            usagetime: 0
                          - upddate: 0.09677
                            usagetime: 0
                          - upddate: 0.12903
                            usagetime: 0
                          - upddate: 0.16129
                            usagetime: 0
                          - upddate: 0.19355
                            usagetime: 0
                          - upddate: 0.22581
                            usagetime: 0
                          - upddate: 0.25806
                            usagetime: 0
                          - upddate: 0.29032
                            usagetime: 0
                          - upddate: 0.32258
                            usagetime: 0
                          - upddate: 0.35484
                            usagetime: 0
                          - upddate: 0.3871
                            usagetime: 0
                          - upddate: 0.41935
                            usagetime: 0
                          - upddate: 0.45161
                            usagetime: 0
                          - upddate: 0.48387
                            usagetime: 0
                          - upddate: 0.51613
                            usagetime: 0
                          - upddate: 0.54839
                            usagetime: 0
                          - upddate: 0.58065
                            usagetime: 0
                          - upddate: 0.6129
                            usagetime: 0
                          - upddate: 0.64516
                            usagetime: 0
                          - upddate: 0.67742
                            usagetime: 0
                          - upddate: 0.70968
                            usagetime: 0
                          - upddate: 0.74194
                            usagetime: 0
                          - upddate: 0.77419
                            usagetime: 0
                          - upddate: 0.80645
                            usagetime: 0
                          - upddate: 0.83871
                            usagetime: 0
                          - upddate: 0.87097
                            usagetime: 0
                          - upddate: 0.90323
                            usagetime: 0
                          - upddate: 0.93548
                            usagetime: 0
                          - upddate: 0.96774
                            usagetime: 0
                          - upddate: 1
                            usagetime: 0
                        daywise_readtime_in_seconds_last_month:
                          - upddate: 0.03226
                            usagetime: 0
                          - upddate: 0.06452
                            usagetime: 0
                          - upddate: 0.09677
                            usagetime: 0
                          - upddate: 0.12903
                            usagetime: 0
                          - upddate: 0.16129
                            usagetime: 0
                          - upddate: 0.19355
                            usagetime: 0
                          - upddate: 0.22581
                            usagetime: 0
                          - upddate: 0.25806
                            usagetime: 0
                          - upddate: 0.29032
                            usagetime: 0
                          - upddate: 0.32258
                            usagetime: 0
                          - upddate: 0.35484
                            usagetime: 0
                          - upddate: 0.3871
                            usagetime: 0
                          - upddate: 0.41935
                            usagetime: 0
                          - upddate: 0.45161
                            usagetime: 0
                          - upddate: 0.48387
                            usagetime: 0
                          - upddate: 0.51613
                            usagetime: 0
                          - upddate: 0.54839
                            usagetime: 0
                          - upddate: 0.58065
                            usagetime: 0
                          - upddate: 0.6129
                            usagetime: 0
                          - upddate: 0.64516
                            usagetime: 0
                          - upddate: 0.67742
                            usagetime: 0
                          - upddate: 0.70968
                            usagetime: 0
                          - upddate: 0.74194
                            usagetime: 0
                          - upddate: 0.77419
                            usagetime: 0
                          - upddate: 0.80645
                            usagetime: 0
                          - upddate: 0.83871
                            usagetime: 0
                          - upddate: 0.87097
                            usagetime: 0
                          - upddate: 0.90323
                            usagetime: 0
                          - upddate: 0.93548
                            usagetime: 0
                          - upddate: 0.96774
                            usagetime: 0
                          - upddate: 1
                            usagetime: 0
                Example (Visitor):
                  value:
                    data:
                      reading_time:
                        month: 0
                        year: 0
                        total_reading_seconds_this_month: 0
                        total_reading_seconds_last_month: 0
                        daywise_readtime_in_seconds_this_month: []
                        daywise_readtime_in_seconds_last_month: []
  /readdiary/<api_version>/adddeletegoals:
    get:
      summary: 'Add, delete, update a goal'
      operationId: NX-0281
      description: |-
        **Description:** Modifies reading goals.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [https://www.nextory.se/api/app/readdiary/<api_version>/adddeletegoals?type=books&books=10&duration=3&reminders=1&action=add](https://www.nextory.se/api/app/readdiary/<api_version>/adddeletegoals?type=books&books=10&duration=3&reminders=1&action=add)
      tags:
        - Reading goals
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: books
          in: query
          name: type
          description: 'The type of goal. From April 2019, only books-type goals are supported. API v6.5 and higher.'
          required: true
        - schema:
            type: number
            example: 10
          in: query
          name: books
          description: The number of books in a books-type goal. Required for books-type goals with actions "add" or "update". API v6.5 and higher.
          required: true
        - schema:
            type: number
            example: 3
          in: query
          name: duration
          description: 'The number of months a books-type goal lasts. Required in case of books-type goal, action "add" or "update". API v6.5 and higher.'
          required: true
        - schema:
            type: boolean
            example: true
          in: query
          name: reminders
          description: 'A boolean value ("1" or "0") that indicates if reading-goal reminder notifications will be enabled. “1” (true) = enable notifications, “0” (false) = disable notifications. Required in case of books-type goal, action "add" or "update". API v6.5 and higher.'
          required: true
        - schema:
            type: string
            example: add
            enum:
              - add
              - delete
              - update
          in: query
          name: action
          description: 'The actions that can be passed with the query. The allowed actions are “add”, “update” and “delete”. API v6.5 and higher.'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties: {}
                required:
                  - data
              examples:
                Example:
                  value:
                    data: {}
  /readdiary/<api_version>/fetchgoals:
    get:
      summary: Fetch goals
      operationId: NX-0282
      description: |-
        **Description:** Gets a list of current reading goals.

        **Parameters:** Mandatory header parameters only.

        **Example Request URL:** [https://www.nextory.se/api/app/readdiary/<api_version>/fetchgoals](https://www.nextory.se/api/app/readdiary/<api_version>/fetchgoals)
      tags:
        - Reading goals
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      goals:
                        type: array
                        uniqueItems: true
                        items:
                          required:
                            - type
                            - books
                            - duration
                            - startdate
                            - enddate
                            - status
                            - expired
                            - daysleft
                            - reminders
                          properties:
                            type:
                              type: string
                              example: books
                              description: 'The type of goal. From April 2019, only books-type goals are supported. API v6.5 and higher.'
                            books:
                              type: number
                              example: 30
                              description: The number of books in a books-type goal. API v6.5 and higher.
                            duration:
                              type: number
                              example: 3
                              description: The number of months a books-type goal lasts. API v6.5 and higher.
                            startdate:
                              type: string
                              example: '04-19-2019 15:32:26 +0100'
                              description: The date when the reading goal began. API v6.5 and higher.
                            enddate:
                              type: string
                              example: '07-19-2019 15:32:26 +0100'
                              description: The date when the reading goal ends. API v6.5 and higher.
                            status:
                              type: number
                              example: 12
                              description: 'The number of books that the account holder has indicated as completed after the goal was set. It can be less than, equal to, or greater than the "books" attribute value. API v6.5 and higher.'
                            expired:
                              type: boolean
                              example: false
                              description: 'A boolean value (“1” or “0”) that indicates if a books-type goal has expired. “1” (true) = expired, “0” (false) = not expired. The goal is expired when the current date is greater than the goal end date. The server to persist expired goals until a new goal of the same type is created. API v6.5 and higher.'
                            daysleft:
                              type: number
                              example: 76
                              description: The number of days left in the reading goal. The difference between the current date and the goal end date. It's better to let the server calculate this so the app does not need to take the device current date/time into account. API v6.5 and higher.
                            reminders:
                              type: boolean
                              example: true
                              description: A boolean value ("1" or "0") that indicates if reading-goal reminder notifications will be enabled. “1” (true) = enable notifications. “0” (false) = disable notifications. API v6.5 and higher.
                    required:
                      - goals
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      goals:
                        - type: books
                          books: 30
                          duration: 3
                          startdate: '04-19-2019 15:32:26 +0100'
                          enddate: '07-19-2019 15:32:26 +0100'
                          status: 12
                          expired: false
                          daysleft: 76
                          reminders: true
  /readdiary/<api_version>/profilestats:
    get:
      summary: Reading diary - rated authors and genres
      operationId: NX-0253
      description: |-
        **Description:** Returns a list of the most-liked authors, genres and books for this account holder.

        **Parameters:** Mandatory header parameters plus two query parameters.

        **Example Request URL:** [https://api.nextory.se/api/app/readdiary/6.5/profilestats?&startyear=2019&endyear=2019](https://api.nextory.se/api/app/readdiary/6.5/profilestats?&startyear=2019&endyear=2019)
      tags:
        - Reading diary
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: '201'
          in: query
          name: startyear
          description: The first year in the query range. The app gets the current year from device settings.
          required: true
        - schema:
            type: string
            example: '2019'
          in: query
          name: endyear
          description: The last year in the query range. The app gets the current year from device settings.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - startdate
                      - enddate
                      - author_stats
                      - category_stats
                      - rating_stats
                      - completed_book_stats
                    properties:
                      startdate:
                        type: number
                        example: 20190101
                        description: The first date of the year you are searching for data on. The app gets the current year from device settings.
                      enddate:
                        type: number
                        example: 20191231
                        description: The last date of the year you are searching for data on. The app gets the current year from device settings.
                      author_stats:
                        type: object
                        required:
                          - total_count
                          - authorlist
                        properties:
                          total_count:
                            type: number
                            description: The total number of authors the account holder has rated in the specifed year or years.
                          authorlist:
                            type: array
                            uniqueItems: true
                            description: The list of authors.
                            items:
                              type: object
                              properties:
                                authorname:
                                  type: string
                                  example: Torill Thorup
                                  description: The name of the author.
                                count:
                                  type: number
                                  example: 1
                                  description: 'The total number of ratings given by the account holder for this author, or the total number of books by that author marked as completed.'
                              required:
                                - authorname
                                - count
                      category_stats:
                        type: object
                        required:
                          - total_count
                          - categorylist
                        properties:
                          total_count:
                            type: number
                            example: 12
                            description: The total number of rated genres the account holder has marked as completed in the specified year or years.
                          categorylist:
                            type: array
                            uniqueItems: true
                            description: The list of rated genres and the total marked as completed.
                            items:
                              type: object
                              properties:
                                categoryname:
                                  type: string
                                  example: Fakta
                                  description: The name of the genre.
                                categorylevel:
                                  type: number
                                  example: 1
                                  description: 'The type of category level. Values are "1" = main category, "2" = sub-category.'
                                  enum:
                                    - 1
                                    - 2
                                count:
                                  type: number
                                  example: 1
                                  description: The total number of ratings given by the account holder for this completed genre.
                                categoryid:
                                  type: number
                                  example: 234
                                  description: The ID of the category itself. Allows the app to potentially jump to that category listing.
                              required:
                                - categoryname
                                - categorylevel
                                - count
                                - categoryid
                      rating_stats:
                        type: object
                        required:
                          - total_count
                          - ratingslist
                        properties:
                          total_count:
                            type: number
                            example: 13
                            description: The total number of books the account holder has rated in the specifed year or years.
                          ratingslist:
                            type: array
                            uniqueItems: true
                            description: The list of books and the total ratings given to each.
                            items:
                              type: object
                              properties:
                                bookid:
                                  type: number
                                  example: 10003952
                                  description: The book identifier.
                                isbn:
                                  type: string
                                  example: '9789174059908'
                                  description: The book ISBN number.
                                title:
                                  type: string
                                  example: Bamse och Tjuvstaden
                                  description: The book title.
                                ratings:
                                  type: number
                                  example: 5
                                  description: The total number of ratings the account holder has given to this book.
                              required:
                                - bookid
                                - isbn
                                - title
                                - ratings
                      completed_book_stats:
                        type: object
                        required:
                          - total_count
                        properties:
                          total_count:
                            type: number
                            description: The total number of books the account holder has completed in the period.
                            example: 0
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      startdate: 20190101
                      enddate: 20191231
                      author_stats:
                        total_count: 6
                        authorlist:
                          - authorname: Univerb
                            count: 1
                          - authorname: Torill Thorup
                            count: 1
                          - authorname: Sven Kjellgren
                            count: 1
                          - authorname: Annika Bengtsson
                            count: 1
                          - authorname: Louise Boije af Gennäs
                            count: 1
                          - authorname: Joakim Gunnarsson
                            count: 1
                      category_stats:
                        total_count: 12
                        categorylist:
                          - categoryname: Skönlitteratur
                            categorylevel: 1
                            count: 4
                            categoryid: 142
                          - categoryname: Fakta
                            categorylevel: 1
                            count: 1
                            categoryid: 234
                          - categoryname: Barnböcker
                            categorylevel: 1
                            count: 1
                            categoryid: 39
                      rating_stats:
                        total_count: 13
                        ratingslist:
                          - bookid: 10003952
                            isbn: '9789174059908'
                            title: Bamse och Tjuvstaden
                            ratings: 5
                          - bookid: 10033044
                            isbn: '9789176292563'
                            title: På andra sidan Venus
                            ratings: 5
                          - bookid: 10010855
                            isbn: '9789198097818'
                            title: Svartängeln
                            ratings: 4
                          - bookid: 10000737
                            isbn: '9789185615469'
                            title: Expresskurs Japanska
                            ratings: 4
                          - bookid: 10038665
                            isbn: '9789176515044'
                            title: Dåliga nyheter
                            ratings: 3
                          - bookid: 10064067
                            isbn: '9789188465108'
                            title: Såren som aldrig läker
                            ratings: 3
                          - bookid: 10004812
                            isbn: '9789174615791'
                            title: Glöm inte att låsa
                            ratings: 3
                          - bookid: 10031478
                            isbn: '9789175578781'
                            title: Omgiven av idioter - hur man förstår dem som inte går att förstå
                            ratings: 3
                          - bookid: 10062593
                            isbn: '9789177796169'
                            title: 'Det osagda: En släkthistoria'
                            ratings: 3
                          - bookid: 10067687
                            isbn: '9788711838662'
                            title: Spanaren som bytte sida
                            ratings: 3
                      completed_book_stats:
                        total_count: 0
  /readdiary/profileyearlystats:
    get:
      summary: Reading diary - yearly read-time list
      operationId: NX-0254
      description: |-
        **Description:** Returns how much reading time the account holder had each month in the last 12 months.

        **Parameters:** Mandatory header parameters only.

        **Example Request URL:** [https://apptest.nextory.se:92/api/app/readdiary/6.7/profileyearlystats](https://apptest.nextory.se:92/api/app/readdiary/6.7/profileyearlystats)
      tags:
        - Reading diary
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      profileid:
                        type: number
                        example: 231047
                        description: The account holder’s profile ID.
                      average_readtime_in_seconds:
                        type: number
                        example: 0.1983627361114486
                        description: The account holder’s average daily reading time in seconds over the past 12 months.
                      monthwise_readtime_in_seconds:
                        type: array
                        uniqueItems: true
                        description: How many seconds the account holder read in each of the past 12 months since today.
                        items:
                          required:
                            - upddate
                            - usagetime
                          properties:
                            upddate:
                              type: string
                              example: 2018-12
                              description: The year and month that the usagetime refers to. Each entry in this array is the total reading clock time for one month.
                            usagetime:
                              type: number
                              example: 0
                              description: The total reading clock time for the month in question.
                    required:
                      - profileid
                      - average_readtime_in_seconds
                      - monthwise_readtime_in_seconds
                required:
                  - data
              examples:
                Example (Account Holder):
                  value:
                    data:
                      profileid: 231047
                      average_readtime_in_seconds: 0.19836274
                      monthwise_readtime_in_seconds:
                        - upddate: 2018-12
                          usagetime: 0
                        - upddate: 2019-01
                          usagetime: 0
                        - upddate: 2019-02
                          usagetime: 0
                        - upddate: 2019-03
                          usagetime: 0
                        - upddate: 2019-04
                          usagetime: 0
                        - upddate: 2019-05
                          usagetime: 0
                        - upddate: 2019-06
                          usagetime: 0
                        - upddate: 2019-07
                          usagetime: 0
                        - upddate: 2019-08
                          usagetime: 0
                        - upddate: 2019-09
                          usagetime: 0
                        - upddate: 2019-10
                          usagetime: 2.38035
                        - upddate: 2019-11
                          usagetime: 0
                Example (Visitor):
                  value:
                    data:
                      profileid: 0
                      average_readtime_in_seconds: 0
                      monthwise_readtime_in_seconds:
                        - upddate: string
                          usagetime: 0
  /searchbooks:
    get:
      summary: Search all books
      operationId: NX-013
      description: |-
        **Description:** Does a simple search for books.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [https://www.nextory.se/api/6.0/searchbooks?appId=201&version=1.1&model=Simulator64&query=john&pagenumber=1&type=2&sorton=title](https://www.nextory.se/api/6.0/searchbooks?appId=201&version=1.1&model=Simulator64&query=john&pagenumber=1&type=2&sorton=title)

        **Possible Errors:** 1000
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: drama
          in: query
          name: query
          description: Search term. All API versions.
          required: true
        - schema:
            type: string
            example: '2'
            default: '0'
          in: query
          name: pagenumber
          description: Page number for lazy load (pagination). Default value = “0”. All API versions.
          required: false
        - schema:
            type: string
            example: '12'
            default: '12'
          in: query
          name: pagesize
          description: The number of bookgroups displayed on a single page. Required if view = "series". There may be situations where a page contains fewer bookgroups than requested. But this does not mean that the next page will contain zero bookgroups. The app therefore needs to continue asking for more bookgroups until it gets an empty array of bookgroups in response. API v6.0 and higher.
          required: false
        - schema:
            type: string
            example: '1'
            enum:
              - '0'
              - '1'
              - '2'
          in: query
          name: type
          description: 'The type of book. Values are “0”, “1” and “2”. "1" = only e-books are returned. "2" = only audio books are returned. If missing or "0" then both e-books and audio books are returned. All API versions.'
          required: false
        - schema:
            type: string
            example: title
            enum:
              - popularity
              - pubdate
              - title
            default: popularity
          in: query
          name: sort
          description: 'How search results will be sorted. Values are “popularity”, “title” and “pubDate”. If missing or an incorrect value is passed, the default is “pubDate”. “popularity” = descending order (the most popular book comes first), “title” = ascending order (A-Z), “pubDate” = descending order (the most recently published book comes first).'
          required: false
        - schema:
            type: boolean
            default: false
            example: true
          in: query
          name: includenotallowedbooks
          description: 'A boolean value (“1” or “0”) that indicates if books returned by the server are not allowed under the account holder’s subscription. "1" (true) = books are not allowed, “0” (false) = books are allowed. Pagination starts from 0. API v6.2 and higher.'
          required: false
        - schema:
            type: string
            default: '0'
            example: 'sv,en'
          in: query
          name: languages
          description: 'Takes single or multiple language codes as values, separated by a comma. If this is not passed, the backend filters bookgroups based on languages allowed for the user market. Any other language values specified will be ignored. If the format of the values is invalid, error code 1000 will be returned. API v7.1 and higher.'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - books
                    properties:
                      bookCount:
                        type: string
                        example: '131'
                        description: The total number of books in the bookgroup. Required in case of the /searchbooks (NX-013) endpoint response. All API versions.
                      notallowedbookcount:
                        type: string
                        example: '11'
                        description: The total number of books that are not allowed for the account holder's subscription. Required in case of /searchbooks (NX-013) endpoint response. API v6.2 and higher.
                      pagetoken:
                        type: string
                        example: '1581315222'
                        description: Introduced as part of the ticket to handle 'Add to library directly from list'. The value for this token is obtained from the backend in the response to the /booksforbookgroup endpoint (“pagenumber” = “0”). The value obtained has to be carried over for the subsequent paginated calls so that any books added to the library after this timestamp will not be excluded from the API response. All API versions.
                      books:
                        type: object
                        required:
                          - authors
                          - descriptionBrief
                          - popularity
                          - id
                          - imageUrl
                          - weburl
                          - pubDate
                          - availableinlib
                          - title
                          - type
                          - libID
                          - allowedinlibrary
                          - relatedbookallowedinlibrary
                          - rank
                          - position
                          - avgrate
                          - numberofrates
                          - userrate
                          - coverratio
                          - isupcoming
                          - isrelatedbookupcoming
                          - libstatus
                          - inCompletedList
                          - relatedInCompletedList
                        properties:
                          authors:
                            type: array
                            description: The book author or authors. All API versions.
                            items: {}
                          descriptionBrief:
                            type: string
                            example: Some description...
                            description: A brief description of the book. Might be a truncated book description from a book card screen. All API versions.
                          popularity:
                            type: string
                            example: '95'
                            description: A value used to sort books locally by popularity. All API versions.
                          id:
                            type: string
                            example: '1026126'
                            description: The identifier for the book itself. All API versions.
                          imageUrl:
                            type: string
                            example: 'https://www.nextory.se/coverimg/130/1007145.jpg'
                            description: Valid image URL. Applies only to the "Promotion" bookgroup type. The image does not need to support resizing on the server. API v6.3 and higher.
                          weburl:
                            type: string
                            example: 'https://nextory.se/bok/jakten-pa-tam-jo-salmson/1007145'
                            description: Bookdetails link for Nextory web. All API versions.
                          pubDate:
                            type: string
                            example: '02-10-2016 15:32:26 +0100'
                            description: The book publication date. The date format might be different but must be consistent across the entire API. Used to sort books locally by date. All API versions.
                          availableinlib:
                            type: number
                            example: 1
                            description: 'Values are "0", "1" and "2". "0" = the book is neither present in the active list nor in my list, "1" = the book is present in my list, "2" = the book is present in the active list. API v6.3 and higher.'
                            deprecated: true
                          relatedBookId:
                            type: string
                            example: '1007146'
                            description: 'Indicates if the e-book has a related audiobook or vice versa. Contains an identifier for the related book. If missing, then the book does not have a related book. All API versions.'
                          title:
                            type: string
                            example: Förnuft och känsla
                            description: The book title. This value is also used to sort books locally by title. All API versions.
                          type:
                            type: string
                            example: '2'
                            description: 'An enum value that defines the content type of a book. "1" = e-books only, "2" = audio books only. All API versions.'
                            enum:
                              - '1'
                              - '2'
                          libID:
                            type: string
                            example: '123'
                            deprecated: true
                            description: 'The book identifier in the account holder’s library. Used in the activation process. Different from id and specific to each profile. When the book is not in my list or active, then we assume that libId is zero. Required in case availableinlib is "1" or "2". Deprecated in API v6.3 (see /bookinfo NX-005).'''
                          allowedinlibrary:
                            type: boolean
                            example: true
                            description: 'A boolean value ("1" or "0") that indicates if the book is available to the account holder’s current subscription. “1” (true) = is available, “0” (false) = is not available. The value should always = “1” for active books because an active book cannot be ‘not allowed’ in an account holder’s library. All API versions.'
                          relatedbookallowedinlibrary:
                            type: boolean
                            example: false
                            description: 'A boolean value ("1" or "0") that indicates if the related book is available to the account holder’s current subscription. “1” (true) = is available, “0” (false) = is not available. Required in case of non-empty “relatedbookid”. All API versions.'
                          numberinseries:
                            type: number
                            example: 11
                            description: 'If the book is a part of series, this parameter indicates the volume number of the book within the series. If the book is not part of a series, this attribute will not be present. The app displays “numberinseries” only if it is greater than “0” and the corresponding bookgroup’s “showvolume” attribute = “1” (true).'
                          esalesticket:
                            type: string
                            example: asdfadsrvdgbvfavf
                            description: Defines an e-sales ticket string needed for smart search implementations. Required in case account holders go to a book card screen and adds the book to my list. We consider this parameter only when "action" = “add”.
                          rank:
                            type: number
                            example: 1
                            description: The relevance of the book in the list. Related to position if the list is sorted by relevance.
                          position:
                            type: number
                            example: 4
                            description: Indicates a book's default position in a list of books for a bookgroup. All API versions.
                          avgrate:
                            type: number
                            example: 4.8018281535649
                            description: The average book rating given by account holders. API v6.3 and higher.
                          numberofrates:
                            type: integer
                            example: 10
                            description: The total number of account holder ratings given to the book. “0” = there are no ratings yet. API v6.3 and higher.
                          userrate:
                            type: number
                            example: 5
                            description: 'The book rating given by the account holder. Values are "0.0", "0.5", "1.0", "1.5", "2.0", "2.5", "3.0", "3.5", "4.0", "4.5", "5.0". A value of 0.0 means that the account holder has not rated the book. API v5.6 and higher.'
                            enum:
                              - 0
                              - 0.5
                              - 1
                              - 1.5
                              - 2
                              - 2.5
                              - 3
                              - 3.5
                              - 4
                              - 4.5
                              - 5
                          coverratio:
                            type: number
                            example: 0.5714
                            description: The ratio of book cover image width and height. Cover ratio = width/height. API v6.3 and higher.
                          isupcoming:
                            type: boolean
                            example: false
                            description: 'A boolean value ("1" or "0") that indicates if the book is upcoming or not. “1” (true) = is upcoming, “0” (false) = is not upcoming. API v6.9 and higher.'
                          isrelatedbookupcoming:
                            type: boolean
                            example: true
                            description: 'A boolean value ("1" or "0") that indicates if the related book is upcoming or not. “1” (true) = is upcoming, “0” (false) = is not upcoming. API v6.9 and higher.'
                          libstatus:
                            type: string
                            example: NOTINLIB
                            description: 'Indicates the possible status of the book in the account holder’s library. Values are “NOTINLIB”, “ACTIVE”, “INACTIVE” and “COMPLETED”. API v7.1 and higher.'
                            enum:
                              - ACTIVE
                              - COMPLETED
                              - INACTIVE
                              - NOTINLIB
                          libid:
                            type: string
                            example: '577433'
                            description: 'The book identifier in the account holder’s library. Used in the activation process. Different from id and specific to each profile. When the book is not in my list or active, then we assume that libId is zero. All API versions.'''
                          inCompletedList:
                            type: boolean
                            example: true
                            description: 'A boolean value ("1" or "0") that indicates if a book is in the completed list. “1” (true) = is in the completed list, “0” (false) = is not in the completed list. API v7.1 and higher.'
                          relatedInCompletedList:
                            type: boolean
                            example: false
                            description: 'A boolean value ("1" or "0") that indicates if a related book is in the completed list. “1” (true) = is in the completed list, “0” (false) = is not in the completed list. API v7.1 and higher.'
              examples:
                Example:
                 value:
                    data:
                      bookCount: '131'
                      notallowedbookcount: '11'
                      pagetoken: '1581315222'
                      books:
                        authors:
                          - null
                        descriptionBrief: Some description...
                        popularity: '95'
                        id: '1026126'
                        imageUrl: 'https://www.nextory.se/coverimg/130/1007145.jpg'
                        weburl: 'https://nextory.se/bok/jakten-pa-tam-jo-salmson/1007145'
                        pubDate: '02-10-2016 15:32:26 +0100'
                        availableinlib: 1
                        relatedBookId: '1007146'
                        title: Förnuft och känsla
                        type: '1'
                        libID: '123'
                        allowedinlibrary: true
                        relatedbookallowedinlibrary: true
                        numberinseries: 11
                        esalesticket: asdfadsrvdgbvfavf
                        rank: 0
                        position: 4
                        avgrate: 4.8018281535649
                        numberofrates: 10
                        userrate: 5
                        coverratio: 0.5714
                        isupcoming: true
                        isrelatedbookupcoming: true
                        libstatus: NOTINLIB
                        libid: '577433'
                        inCompletedList: true
                        relatedInCompletedList: true
  /searchbooksfacets:
    get:
      summary: Search advanced
      operationId: NX-014
      description: |-
        **Description:** Returns a list of facets that the account holder can use to narrow down the search results.

        **Parameters:** Mandatory header parameters plus some query parameters.

        **Example Request URL:** [http://104.155.208.232:82/api/6.4/searchbooksfacets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&query=stieg&pagenumber=0&pagesize=12&sort=default&type=0&includenotallowedbooks=0](http://104.155.208.232:82/api/6.4/searchbooksfacets?appId=201&version=3.3.2&model=Simulator&osinfo=11.4&deviceid=1869C1C1-77D5-4AEA-B5F1-E1CE8045768B&locale=sv_SE&token=f77e8f50-73c2-436f-b9e9-e491953a0561&query=stieg&pagenumber=0&pagesize=12&sort=default&type=0&includenotallowedbooks=0)
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/appid'
        - $ref: '#/components/parameters/canary'
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/model'
        - $ref: '#/components/parameters/osinfo'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/version'
        - schema:
            type: string
            example: drama
          in: query
          name: query
          description: Search term. API v6.5 and higher.
          required: true
        - schema:
            type: string
            example: '2'
          in: query
          name: pagenumber
          description: Page number for lazy load (pagination). Default value = “0”. All API versions.
          required: false
        - schema:
            type: string
            example: '12'
          in: query
          name: pagesize
          description: The number of bookgroups displayed on a single page. Required if view = "series". There may be situations where a page contains fewer bookgroups than requested. But this does not mean that the next page will contain zero bookgroups. The app therefore needs to continue asking for more bookgroups until it gets an empty array of bookgroups in response. API v6.0 and higher.
          required: false
        - schema:
            type: string
          in: query
          name: sort
          description: 'How search results will be sorted. Values are “relevance”, “pubDate”, “rating”, “title” and “author”. If missing or an incorrect value is passed, the default is “relevance”. “relevance” = descending order (the most relevant book comes first), “title” = ascending order (A-Z), “pubDate” = descending order (the most recently published book comes first).'
          required: false
        - schema:
            type: boolean
            example: true
          in: query
          name: includenotallowedbooks
          description: 'A boolean value (“1” or “0”) that indicates if books returned by the server are not allowed under the account holder’s subscription. "1" (true) = books are not allowed, “0” (false) = books are allowed. Pagination starts from 0. API v6.2 and higher.'
          required: false
        - schema:
            type: string
            example: Stieg Trenter (URL escaped)
          in: query
          name: authors_facet
          description: 'facet attribute + "_facet. Optional parameter for facet filters. The app should not keep this hardcoded, however it should hard-code the list of supported facets (see NX-0141). Multiple values are comma-separated. API v6.5 and higher.'
          required: false
        - schema:
            type: string
            example: 'sv,en'
          in: query
          name: languages
          description: 'Takes single or multiple language codes as values, separated by a comma. If this is not passed, the backend filters bookgroups based on languages allowed for the user market. Any other language values specified will be ignored. If the format of the values is invalid, error code 1000 will be returned. API v7.1 and higher.'
          required: false
        - schema:
            type: boolean
            example: true
          in: query
          name: tags
          description: 'A boolean value that indicates whether or not the query is on tags. API v7.1 and higher. '
          required: false
          deprecated: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - books
                      - bookcount
                      - notallowedbookcount
                    properties:
                      books:
                        type: array
                        uniqueItems: true
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 10057685
                              description: The identifier for the book itself. All API versions.
                            title:
                              type: string
                              example: Harry Potter och De Vises Sten
                              description: The book title. This value is also used to sort books locally by title. All API versions.
                            type:
                              type: number
                              example: 2
                              description: 'An enum value that defines the content type of a book. "1" = e-books only, "2" = audio books only. All API versions.'
                            imageurl:
                              type: string
                              example: 'https://www.nextory.se/coverimg/130/10057685_2.jpg'
                              description: The book cover image URL. All API versions.
                            weburl:
                              type: string
                              example: 'https://www.nextory.se/bok/harry-potter-och-de-vises-sten-jk-rowling/9781781108956?esalesticket=Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM0Ozk3ODE3ODExMDg5NTY7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7'
                              description: Bookdetails link for Nextory web. All API versions.
                            descriptionbrief:
                              type: string
                              example: 'Plötsligt händer det märkliga ting i den lilla staden! Mystiska stjärnskott på himlen och svärmar av ugglor mitt på dagen, katter som läser kartor och underliga människor som står i gathörnen.'
                              description: A brief description of the book. Might be a truncated book description from a book card screen. All API versions.
                            relatedbookid:
                              type: string
                              example: '1007146'
                              description: 'Indicates if the e-book has a related audiobook or vice versa. Contains an identifier for the related book. If missing, then the book does not have a related book. All API versions.'
                            numberinseries:
                              type: number
                              example: 1
                              description: 'If the book is a part of series, this parameter indicates the volume number of the book within the series. If the book is not part of a series, this attribute will not be present. The app displays “numberinseries” only if it is greater than “0” and the corresponding bookgroup’s “showvolume” attribute = “1” (true).'
                            pubdate:
                              type: string
                              example: '2020-01-06 17:17:46 +0100'
                              description: The book publication date. The date format might be different but must be consistent across the entire API. Used to sort books locally by date. All API versions.
                            authors:
                              type: array
                              description: The book author or authors. All API versions.
                              items: {}
                            libid:
                              type: string
                              example: '5847880'
                              description: 'The book identifier in the account holder’s library. Used in the activation process. Different from id and specific to each profile. When the book is not in my list or active, then we assume that libId is zero. All API versions.'''
                            allowedinlibrary:
                              type: boolean
                              example: true
                              description: 'A boolean value ("1" or "0") that indicates if the book is available to the account holder’s current subscription. “1” (true) = is available, “0” (false) = is not available. The value should always = “1” for active books because an active book cannot be ‘not allowed’ in an account holder’s library. All API versions.'
                            relatedbookallowedinlibrary:
                              type: boolean
                              example: false
                              description: 'A boolean value ("1" or "0") that indicates if the related book is available to the account holder’s current subscription. “1” (true) = is available, “0” (false) = is not available. Required in case of non-empty “relatedbookid”. All API versions.'
                            coverratio:
                              type: number
                              example: 1
                              description: The ratio of book cover image width and height. Cover ratio = width/height. API v6.3 and higher.
                            esalesticket:
                              type: string
                              example: Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM0Ozk3ODE3ODExMDg5NTY7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7
                              description: Defines an e-sales ticket string needed for smart search implementations. Required in case account holders go to a book card screen and adds the book to my list. We consider this parameter only when "action" = “add”.
                            rank:
                              type: number
                              example: 1
                              description: The relevance of the book in the list. Related to position if the list is sorted by relevance.
                            position:
                              type: number
                              description: Indicates a book's default position in a list of books for a bookgroup. All API versions.
                              example: 1
                            numberofrates:
                              type: number
                              example: 2735
                              description: The total number of account holder ratings given to the book. “0” = there are no ratings yet. API v6.3 and higher.
                            avgrate:
                              type: number
                              example: 4.8018281535649
                              description: The average book rating given by account holders. API v6.3 and higher.
                            isupcoming:
                              type: boolean
                              example: true
                              description: 'A boolean value ("1" or "0") that indicates if the book is upcoming or not. “1” (true) = is upcoming, “0” (false) = is not upcoming. API v6.9 and higher.'
                            isrelatedbookupcoming:
                              type: boolean
                              example: false
                              description: 'A boolean value ("1" or "0") that indicates if the related book is upcoming or not. “1” (true) = is upcoming, “0” (false) = is not upcoming. API v6.9 and higher.'
                            libstatus:
                              type: string
                              example: INACTIVE
                              description: 'Indicates the possible status of the book in the account holder’s library. Values are “NOTINLIB”, “ACTIVE”, “INACTIVE” and “COMPLETED”. API v7.1 and higher.'
                              enum:
                                - ACTIVE
                                - COMPLETED
                                - INACTIVE
                                - NOTINLIB
                            series:
                              type: string
                              example: harry potter
                              description: 'Series name. If the book is not part of a series, this attribute will not be present. If there is a single book in a related bookgroup, the related bookgroup should not appear in this (NX-005) response. Not relevant to API v7.0 and higher.'
                          required:
                            - id
                            - title
                            - type
                            - imageurl
                            - weburl
                            - descriptionbrief
                            - pubdate
                            - authors
                            - libid
                            - allowedinlibrary
                            - relatedbookallowedinlibrary
                            - coverratio
                            - rank
                            - position
                            - numberofrates
                            - avgrate
                            - isupcoming
                            - isrelatedbookupcoming
                      bookcount:
                        type: number
                        example: 452
                        description: The total number of books in the bookgroup. Required in case of the /searchbooks (NX-013) endpoint response. All API versions.
                      notallowedbookcount:
                        type: number
                        example: 0
                        description: The total number of books that are not allowed for the account holder's subscription. Required in case of /searchbooks (NX-013) endpoint response. API v6.2 and higher.
                required:
                  - data
              examples:
                Example:
                  value:
                    data:
                      books:
                        - id: 10057685
                          title: Harry Potter och De Vises Sten
                          type: 2
                          imageurl: 'https://www.nextory.se/coverimg/130/10057685_2.jpg'
                          weburl: 'https://www.nextory.se/bok/harry-potter-och-de-vises-sten-jk-rowling/9781781108956?esalesticket=Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM0Ozk3ODE3ODExMDg5NTY7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7'
                          descriptionbrief: 'Plötsligt händer det märkliga ting i den lilla staden! Mystiska stjärnskott på himlen och svärmar av ugglor mitt på dagen, katter som läser kartor och underliga människor som står i gathörnen'
                          relatedbookid: ''
                          numberinseries: 1
                          pubdate: '2020-01-06 17:17:46 +0100'
                          authors:
                            - J.K. Rowling
                          libid: '5847880'
                          allowedinlibrary: true
                          relatedbookallowedinlibrary: false
                          coverratio: 1
                          esalesticket: Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM0Ozk3ODE3ODExMDg5NTY7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7
                          rank: 1
                          position: 1
                          numberofrates: 2735
                          avgrate: 4.8018281535649
                          isupcoming: false
                          isrelatedbookupcoming: false
                          libstatus: INACTIVE
                          series: harry potter
                        - id: 10057684
                          title: Harry Potter och Hemligheternas kammare
                          type: 2
                          imageurl: 'https://www.nextory.se/coverimg/130/10057684_3.jpg'
                          weburl: 'https://www.nextory.se/bok/harry-potter-och-hemligheternas-kammare-jk-rowling/9781781108963?esalesticket=Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODMzOzk3ODE3ODExMDg5NjM7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7'
                          descriptionbrief: Sommarlovet är äntligen över! Harry Potter har längtat tillbaka till sitt andra år på Hogwarts skola för häxkonster och trolldom. Men hur ska han stå ut med den omåttligt stroppige professor
                          relatedbookid: ''
                          numberinseries: 2
                          pubdate: '2017-07-13 00:00:00 +0200'
                          authors:
                            - J.K. Rowling
                          allowedinlibrary: true
                          relatedbookallowedinlibrary: false
                          coverratio: 1
                          esalesticket: Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODMzOzk3ODE3ODExMDg5NjM7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7
                          rank: 2
                          position: 2
                          numberofrates: 2092
                          avgrate: 4.8018281535649
                          isupcoming: false
                          isrelatedbookupcoming: false
                          libstatus: NOTINLIB
                          series: harry potter
                        - id: 10057687
                          title: Harry Potter och Halvblodsprinsen
                          type: 2
                          imageurl: 'https://www.nextory.se/coverimg/130/10057687_2.jpg'
                          weburl: 'https://www.nextory.se/bok/harry-potter-och-halvblodsprinsen-jk-rowling/9781781109007?esalesticket=Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM2Ozk3ODE3ODExMDkwMDc7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7'
                          descriptionbrief: I Harry Potter och Halvblodsprinsen går Harry Potter i sjätte årskursen på Hogwarts skola för häxkonster och trolldom. Han kastas rakt in i kampen mellan det onda och det goda.
                          relatedbookid: ''
                          numberinseries: 6
                          pubdate: '2017-08-14 00:00:00 +0200'
                          authors:
                            - J.K. Rowling
                          allowedinlibrary: true
                          relatedbookallowedinlibrary: false
                          coverratio: 1
                          esalesticket: Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5Ozg2ODM2Ozk3ODE3ODExMDkwMDc7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7
                          rank: 3
                          position: 3
                          numberofrates: 1441
                          avgrate: 4.8018281535649
                          isupcoming: false
                          isrelatedbookupcoming: false
                          libstatus: NOTINLIB
                          series: harry potter
                        - id: 10057676
                          title: Harry Potter och Fången från Azkaban
                          type: 2
                          imageurl: 'https://www.nextory.se/coverimg/130/10057676_3.jpg'
                          weburl: 'https://www.nextory.se/bok/harry-potter-och-fangen-fran-azkaban-jk-rowling/9781781108970?esalesticket=Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5OzkzNzkwOzk3ODE3ODExMDg5NzA7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7'
                          descriptionbrief: I tolv långa år har den ökända Sirius Black hållits fången på fortet Azkaban. Han är anklagad för att ha dödat tretton människor i samma förbannelse. Han anses vara den självklare efterträdar
                          relatedbookid: ''
                          numberinseries: 3
                          pubdate: '2017-08-10 00:00:00 +0200'
                          authors:
                            - J.K. Rowling
                          allowedinlibrary: true
                          relatedbookallowedinlibrary: false
                          coverratio: 1
                          esalesticket: Oy9zZWFyY2h6b25ld2l0aGZhY2V0cy9zZWFyY2gtaGl0czsjO3Byb2R1Y3Rfa2V5OzkzNzkwOzk3ODE3ODExMDg5NzA7T0JKRUNUSVZFJDtOT05FOk5PTkU7MzQ7
                          rank: 4
                          position: 4
                          numberofrates: 1929
                          avgrate: 4.8018281535649
                          isupcoming: false
                          isrelatedbookupcoming: false
                          libstatus: NOTINLIB
                          series: harry potter
                      bookcount: 452
                      notallowedbookcount: 0
components:
  parameters:
    appid:
      name: appid
      required: true
      in: header
      description: 'Identifies the app platform that the call comes from. Valid values are 200 = Google Android, 201 = iOS, 202 = Huawei Android.'
      schema:
        type: string
        example: '200'
        enum:
          - '200'
          - '201'
          - '202'
    canary:
      name: canary
      required: true
      in: header
      description: Canary flag which is passed with /login and /userdetails API calls.
      schema:
        type: string
        example: '1.0'
    deviceid:
      name: deviceid
      required: true
      in: header
      description: 'A UUID is a unique identifier related to application installation. If an account holder uninstalls then re-installs the app, the UUID changes.'
      schema:
        type: string
        example: xxxxx-xxxxx-xxxxx-xxxxx
    locale:
      name: locale
      in: header
      required: false
      schema:
        type: string
        example: sv_SE
      description: The account holder's language from a successful login response (if logged in) or device settings (if not logged in). API v6.3 and higher.
    model:
      name: model
      required: true
      in: header
      description: A string which describes the model of the device that the call comes from. The OS provides this value. For informational purposes only.
      schema:
        type: string
        example: iPhone 6 Plus
    osinfo:
      name: osinfo
      in: header
      description: A string which indicates which OS version is being used. For informational/statistical purposes only.
      schema:
        type: string
        example: iOS 8.4.1
    token:
      name: token
      required: true
      in: header
      description: Valid profile or login token. Profile token in case profile switch happens from profile to profile. Login token in case of switch from initial landing page to any profile. Required for login step 2 only. API v5.5 and higher.
      schema:
        type: string
        example: 733393910B1B27CY0E4316EA10DF1CF1
    version:
      name: version
      required: true
      in: header
      description: The version of the API. Use CFBundleShortVersionString not CFBundleVersion.
      schema:
        type: string
        example: '1.1'
  schemas:
    '200':
      description: Successful response.
      type: object
      properties:
        id:
          type: object
          description: OK
      x-examples:
        example-1:
          value:
            data:
              status: SUCCESS
    '1000':
      description: Input missing or invalid.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1000
              msg: Input missing or invalid.
    '1001':
      description: You were logged out because your membership got canceled.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1001
              msg: You were logged out because your membership got canceled.
    '1002':
      description: You were logged out because you exceeded your daily/monthly download limit.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1002
              msg: You were logged out because you exceeded your daily/monthly download limit.
    '1003':
      description: You were logged out because you downgraded your subscription.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1003
              msg: You were logged out because you downgraded your subscription.
    '1004':
      description: You were logged out because you upgraded your subscription.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1004
              msg: You were logged out because you upgraded your subscription.
    '1005':
      description: You were logged out because you are currently logged in to too many devices.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1005
              msg: You were logged out because you are currently logged in to too many devices.
    '1006':
      description: Your current session expired because you are currently logged in to too many devices.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1006
              msg: Your current session expired because you are currently logged in to too many devices.
    '1007':
      description: You were logged out because your profile was deleted.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1007
              msg: You were logged out because your profile was deleted.
    '1008':
      description: You were logged out because your account password changed.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1008
              msg: You were logged out because your account password changed.
    '1009':
      description: You were logged out. Please log in again.
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
            msg:
              type: string
          required:
            - code
            - msg
      x-examples:
        example-1:
          value:
            error:
              code: 1009
              msg: You were logged out. Please log in again.
  securitySchemes:
    app_id:
      type: apiKey
      description: API key to authorize requests.
      name: appid
      in: header
tags:
  - name: Account holders and users
  - name: Analytics
  - name: Authentication and login
  - name: Books and bookgroups
  - name: Library sync
  - name: Markets
  - name: Notifications
  - name: Reading diary
  - name: Reading goals
  - name: Search
  - name: Signup
  - name: Social
  - name: Subscriptions
